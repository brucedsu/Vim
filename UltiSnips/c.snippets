#-------------------
# Header
#-------------------
snippet inc "#include <> (inc)"
#include <${0:/* header */}.h>
endsnippet

snippet Inc "#include local header (Inc)"
#include "${0:/* header */}.h"
endsnippet

snippet stdio "#include <stdio.h> (stdio)"
#include <stdio.h>
endsnippet

snippet stdlib "#include <stdlib.h> (stdlib)"
#include <stdlib.h>
endsnippet

snippet assert "#include <assert.h> (assert)"
#include <assert.h>
endsnippet

snippet libgen "#include <libgen.h> (libgen)"
#include <libgen.h>
endsnippet

#-------------------
# Define
#-------------------
snippet def "#define ..."
#define ${0:/* macro */}
endsnippet

snippet ifndef "#ifndef ... #define ... #endif"
#ifndef ${1:`!v toupper(Filename())`_h}
#define $1
$0
#endif
endsnippet

#-------------------
# Main
#-------------------
snippet main "int main(int argc, char *argv[]) (main)"
int main(int argc, char* argv[])
{
	${0:/* insert code here... */}

	return 0;
}
endsnippet

snippet mainv "int main(void) (mainv)"
int main(void)
{
	${0:/* insert code here... */}

	return 0;
}
endsnippet

#-------------------
# Hello, world!
#-------------------
snippet hello "Hello, world! (hello)"
int main(int argc, char* argv[])
{
	${0:/* insert code here... */}
	printf("Hello, world!\n");

	return 0;
}
endsnippet

#-------------------
# stdio
#-------------------
snippet pr "printf(...) (pr)"
printf(${0:/* const char* restrict, ... */});
endsnippet

snippet sc "scanf(...) (sc)"
scanf(${0:/* const char* restrict, ... */});
endsnippet

#-------------------
# libgen
#-------------------
snippet base
basename(${0:/* char* */})
endsnippet
