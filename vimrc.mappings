" ---------------------------- Modeline and Notes ---------------------------- {
" vim: tabstop=4 softtabstop=4 shiftwidth=4 textwidth=80
" vim: foldlevel=0 foldmarker={,} foldmethod=marker
" vim: foldtext=deisufunc#DotVimsFoldText()
"    ____       _ ____                                          _
"   |  _ \  ___(_) ___| _   _       _ __ ___   __ _ _ __  _ __ (_)_ __   __ _ ___
"   | | | |/ _ \ \___ \| | | |_____| '_ ` _ \ / _` | '_ \| '_ \| | '_ \ / _` / __|
"   | |_| |  __/ |___) | |_| |_____| | | | | | (_| | |_) | |_) | | | | | (_| \__ \
"   |____/ \___|_|____/ \__,_|     |_| |_| |_|\__,_| .__/| .__/|_|_| |_|\__, |___/
"                                                  |_|   |_|            |___/
"
" DeiSu's personal vim mappings.
" Copyright Â© 2014-2015 DeiSu. All Rights Reserved.
" }
" --------------------------------- Editing ---------------------------------- {

" jump to current file's directory
nnoremap <Leader>cd :cd %:p:h<CR>

" toggle spell checking
nnoremap <silent> <Leader>ss :set spell!<CR>

" split: S is covered by cc
nnoremap S i<cr><esc>^mwgk:silent! s/\v +$//<cr>:noh<cr>`w

" keep the cursor in place while joining lines
nnoremap J mzJ`z

" quick edit vim config files
nnoremap <Leader>vv :vi $MYVIMRC<CR>
nnoremap <Leader>vp :vi ~/.vimrc.plugins<CR>
nnoremap <Leader>vc :vi ~/.vimrc.plugins.conf<CR>
nnoremap <Leader>vm :vi ~/.vimrc.mappings<CR>
nnoremap <Leader>vf :vi ~/.vim/autoload/deisufunc.vim<CR>
nnoremap <Leader>vg :vi ~/.gvimrc<CR>
nnoremap <Leader>so :source $MYVIMRC<CR>:filetype detect<CR>:exe ":echo '$MYVIMRC reloaded >^.^<'"<CR>

" }
" -------------------------------- Formatting -------------------------------- {

" toggle [i]nvisibles characters
nnoremap <Leader>i :set list!<CR>

" manually remove trailing spaces
nnoremap _$ :call deisufunc#Preserve("%s/\\s\\+$//e")<CR>

" reindent
nnoremap _= :call deisufunc#Preserve("normal gg=G")<CR>

" indent/unindent line(s) Mac OS X way
if deisufunc#MacVim()
    nnoremap <D-[> <<
    nnoremap <D-]> >>
    vnoremap <D-[> <gv
    vnoremap <D-]> >gv
endif

" general indent/unindent line(s)
nnoremap <Tab> >>
nnoremap <S-Tab> <<
vnoremap > >gv
vnoremap < <gv

" use space to toggle folding
nnoremap <Space> za
vnoremap <Space> za

" }
" --------------------------------- Product ---------------------------------- {

" save before make
nnoremap <Leader>mm :w<CR>:make<CR>
nnoremap <Leader>mc :make clean<CR>

" }
" ------------------------------ User Interface ------------------------------ {

noremap <Leader>bg :call deisufunc#ToggleBG()<CR>

" }
" -------------------------- Searching and Movement -------------------------- {

" remove search highlighting
nmap <silent> <Leader>/ :nohlsearch<CR>

" keep search matches in the middle of the window
nnoremap * *zzzv
nnoremap # #zzzv
nnoremap n nzzzv
nnoremap N Nzzzv

" delete characters untill end of the line
nnoremap D d$

" wrapped lines goes down/up to next row, rather than next line in file.
noremap j gj
noremap k gk

" begining and end of line
noremap H ^
noremap L $
vnoremap L g_

" power scroll
if deisufunc#MacVim()
  nnoremap <D-k> 15gk
  nnoremap <D-j> 15gj
endif

" }
" ----------------------------------- File ----------------------------------- {

" rename file
nnoremap <Leader>rn :call deisufunc#RenameFile()<CR>

" }
" ---------------------------------- Buffer ---------------------------------- {

" open
cnoremap %% <C-R>=fnameescape(expand('%:h')).'/'<CR>
nmap <Leader>ew :e %%
nmap <Leader>es :sp %%
nmap <Leader>ev :vsp %%
nmap <Leader>et :tabe %%

" save
nnoremap <C-s> :w<CR>
inoremap <C-s> <Esc>:w<CR>a

" allow us to save a file we don't have permission to
" *after* we have already opened it
cnoremap w!! w !sudo tee % >/dev/null

" quit
inoremap <C-Q> <Esc>:q<CR>
nnoremap <C-Q> :q<CR>
vnoremap <C-Q> <Esc>

" :Q to quit (should be default)
command! Q q

" delete buffer
nnoremap <Leader>dd :bd<CR>

" delete buffer but preserve window
nnoremap <Leader>DD :ene<CR>:bw #<CR>

" navigate
nnoremap <Left> :bprev<CR>
nnoremap <Right> :bnext<CR>

" switch to alternative buffer
nnoremap <Leader>e :e#<CR>

" count word
nnoremap <Leader>cw :echo deisufunc#CountWord() . " Words"<CR>

" }
" ---------------------------------- Window ---------------------------------- {

" create
nnoremap <Leader>nw :new<CR>
nnoremap <Leader>nv :vnew<CR>

" navigate
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k

" }
" ----------------------------------- Tab ------------------------------------ {

" new tab
nnoremap <Leader>nt :tabnew<CR>

nnoremap <Up> :tabprev<CR>
nnoremap <Down> :tabnext<CR>

" }
